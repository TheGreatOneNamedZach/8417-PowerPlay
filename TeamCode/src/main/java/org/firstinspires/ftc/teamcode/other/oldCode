This file is for storing code that we do not want to delete.

/////////////////////////////////////////
/////       Slide PIDF System       /////
/////////////////////////////////////////
public void slideControl (int targetPos){
    double currentTime = timer.milliseconds();
    double currentError = targetPos - elevator.getCurrentPosition();

    p = k_p * currentError;
    i += k_i * (currentError * (currentTime - lastTime));
    i = Math.max(i, -1);
    i = Math.min(i, 1);
    d = k_d * (currentError - lastError) / (currentTime - lastTime);

    elevator.setPower(0.01 * (p + i + d));
    telemetry.addData("", 0.01 * (p + i + d));

    lastTime = currentTime;
    lastError = currentError;
}

/////////////////////////////////////////
/////     Linear Slide System V1    /////
/////////////////////////////////////////
motorPower = (gamepad2.left_stick_y * -0.75);
if (!(isPressed && gamepad2.left_stick_y > 0)) {
    elevator.setPower(motorPower);
    telemetry.addData("Elevator", motorPower); // motor1 power
    telemetry.addData("Pos", elevator.getCurrentPosition());

    if (gamepad2.left_stick_y == 0 && !isPressed) { // If the joystick is at rest AND the limit switch is not pressed...
        if (!firstLoop) { // ...and the motor was NOT at rest in the last loop...
            motor1Pos = elevator.getCurrentPosition(); // ...get the motor position.
            firstLoop = true;
        /*
        This says the motor has been at rest before.
        This is so the motor postion is not constantly reset every loop iteration
        while the motor is at rest.
         */
        } else { // ...and the motor WAS at rest in the last loop...
            elevator.setTargetPosition(motor1Pos); // Sets the target position
            elevator.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            // Makes the positive direction the motor runs
            // towards the same direction you want it to go
            elevator.setPower(0.75);
        }
    } else { // If the joystick is NOT at rest...
        elevator.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        firstLoop = false;
        elevator.setPower(motorPower);
    }
}

/////////////////////////////////////////
/////     Linear Slide System V2    /////
/////////////////////////////////////////
motorPower = (gamepad2.left_stick_y * -0.75);
if (!(isPressed && gamepad2.left_stick_y > 0)) {
    elevator.setPower(motorPower);
    telemetry.addData("Elevator", motorPower); // motor1 power
    telemetry.addData("Pos", elevator.getCurrentPosition());

    if (gamepad2.left_stick_y == 0 && !isPressed) { // If the joystick is at rest AND the limit switch is not pressed...
        elevator.setPower(0.025);
    } else if(gamepad2.left_stick_y == 0 && isPressed) {
        elevator.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
    } else { // If the joystick is NOT at rest..
        elevator.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        firstLoop = false;
        elevator.setPower(motorPower);
        telemetry.addData("Power", motorPower);
    }
}
if (gamepad2.dpad_down) {
    elevator.setPower(0.6);
    elevator.setTargetPosition(1400);
    elevator.setMode(DcMotor.RunMode.RUN_TO_POSITION);
} else if (gamepad2.dpad_left) {
    elevator.setPower(0.6);
    elevator.setTargetPosition(2260);
    elevator.setMode(DcMotor.RunMode.RUN_TO_POSITION);
} else if (gamepad2.dpad_up) {
    elevator.setPower(0.6);
    elevator.setTargetPosition(3600);
    elevator.setMode(DcMotor.RunMode.RUN_TO_POSITION);
}