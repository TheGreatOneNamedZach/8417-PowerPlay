//
// build.gradle in TeamCode
//
// Most of the definitions for building your module reside in a common, shared
// file 'build.common.gradle'. Being factored in this way makes it easier to
// integrate updates to the FTC into your code. If you really need to customize
// the build definitions, you can place those customizations in this file, but
// please think carefully as to whether such customizations are really necessary
// before doing so.


// Custom definitions may go here

// Include common definitions from above.
apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'

android {

    sourceSets {
        main {
            java {
                srcDirs 'src\\main\\java', 'src\\main\\java\\2', 'src\\main\\java\\org.firstinspires.ftc.teamcode\\motors', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\motors', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\roadr', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\roadr\\drive', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\roadr\\drive\\opmode', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\roadr\\trajectorysequence', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\roadr\\trajectorysequence\\sequencesegment', 'src\\main\\java\\org\\firstinspires\\ftc\\teamcode\\roadr\\util'
            }
        }
    }
    namespace = 'org.firstinspires.ftc.teamcode'

    packagingOptions {
        jniLibs.useLegacyPackaging true
    }
}

dependencies {
    implementation project(':FtcRobotController')
    annotationProcessor files('lib/OpModeAnnotationProcessor.jar')

    implementation 'org.apache.commons:commons-math3:3.6.1'

    implementation 'com.acmerobotics.roadrunner:core:0.5.5'

    implementation 'org.openftc:easyopencv:1.6.0'
}
